<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.usercenter.dao.MenuDao">
    <resultMap type="menu" id="MenuMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="path" column="path"/>
        <result property="fromType" column="from_type"/>
        <result property="url" column="url"/>
        <result property="seq" column="seq"/>
        <result property="iconClass" column="icon_class"/>
        <result property="state" column="state"/>
        <result property="visable" column="visable"/>
        <association property="parent" javaType="menu">
            <id property="id" column="pid"/>
            <result property="name" column="pname"/>
            <result property="seq" column="pseq"/>
            <result property="iconClass" column="picon_class"/>
            <result property="state" column="pstate"/>
            <result property="visable" column="pvisable"/>
        </association>
        <association property="authority" javaType="authority">
            <id property="id" column="authority_id"/>
            <result property="name" column="authority_name"/>
            <result property="code" column="authority_code"/>
        </association>
    </resultMap>

    <select id="get" parameterType="long" resultMap="MenuMap">
        SELECT m.*,a.name authority_name,a.code authority_code,p.name pname,p.seq pseq,p.icon_class picon_class,p.state pstate,p.visable pvisable FROM menu m
        LEFT JOIN menu p on m.pid=p.id
        LEFT JOIN authority a on m.authority_id=a.id
        where m.id = #{id}
    </select>

    <select id="getWithoutAuthority" parameterType="long" resultMap="MenuMap">
        SELECT * FROM menu
        where id = #{id}
    </select>

    <select id="queryByUserAndFromType" parameterType="qmenu" resultMap="MenuMap">
        SELECT c.*,a.name authority_name,a.code authority_code
        FROM menu c
        INNER JOIN role_authority rr on rr.authority_id=c.authority_id
        INNER JOIN user_role ur on rr.role_id=ur.role_id
        INNER JOIN authority a on c.authority_id = a.id
        WHERE c.state='1' and c.visable='1'
        AND ur.user_id=#{userId}
        <if test="fromType != null">
        AND c.from_type=#{fromType}
        </if>
    </select>

    <insert id="insert" parameterType="menu" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO menu(name,path,url,from_type,authority_id,seq,pid,icon_class,state,visable)
        VALUES(#{name},#{path},#{url},#{fromType},
        <choose>
            <when test="authority!=null">#{authority.id}</when>
            <otherwise>null</otherwise>
        </choose>
        ,#{seq},
        <choose>
            <when test="parent!=null">#{parent.id}</when>
            <otherwise>null</otherwise>
        </choose>
        ,#{iconClass},#{state},#{visable})
    </insert>

    <update id="update" parameterType="menu">
        UPDATE menu
        <set>
            name = #{name},
            path = #{path},
            from_type = #{fromType},
            authority_id = <choose><when test="authority!=null">#{authority.id}</when><otherwise>null</otherwise></choose>,
            seq = #{seq},
            pid = <choose><when test="parent!=null">#{parent.id}</when><otherwise>null</otherwise></choose>,
            icon_class = #{iconClass},
            state = #{state},
            visable = #{visable},
        </set>
        where id = #{id}
    </update>

    <update id="sensitiveUpdate" parameterType="menu">
        UPDATE menu
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="path != null">path = #{path},</if>
            <if test="fromType != null">from_type = #{fromType},</if>
            <if test="authority != null">authority_id = #{authority.id},</if>
            <if test="seq != null">seq = #{seq},</if>
            <if test="parent != null">pid = #{parent.id},</if>
            <if test="iconClass != null">icon_class = #{iconClass},</if>
            <if test="state != null">state = #{state},</if>
            <if test="visable != null">visable = #{visable},</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="menu">
        DELETE FROM menu
        <where>
             AND id = #{id}
        </where>
    </delete>

    <select id="exists" parameterType="menu" resultType="int">
        select count(*) from menu where name = #{name}
    </select>

    <sql id="select-conditions">
        <if test="id != null">AND m.id = #{id}</if>
        <if test="name != null">AND m.name like concat('%',#{name},'%')</if>
        <if test="path != null">AND m.path = #{path}</if>
        <if test="authorityId != null">AND m.authority_id = #{authorityId}</if>
        <if test="seq != null">AND m.seq = #{seq}</if>
        <if test="pid != null">AND m.pid = #{pid},</if>
        <if test="iconClass != null">AND m.icon_class = #{iconClass}</if>
        <if test="state != null">AND m.state = #{state}</if>
        <if test="visable != null">AND m.visable = #{visable}</if>
    </sql>

    <select id="query" parameterType="qmenu" resultMap="MenuMap">
        SELECT m.*,a.name authority_name,a.code authority_code FROM menu m
        LEFT JOIN authority a on m.authority_id=a.id
        <where>
            <include refid="select-conditions"/>
        </where>
        <if test="sort!= null">
            order by ${sort} ${order}
        </if>
        <if test="limit>0">
            limit #{offset},#{limit}
        </if>
    </select>

    <select id="count" parameterType="qmenu" resultType="int">
        SELECT count(*) FROM menu m
        <where>
            <include refid="select-conditions"/>
        </where>
    </select>

    <select id="getChildren" parameterType="long" resultMap="MenuMap">
        SELECT * FROM menu
        WHERE path like concat('%/',#{id},'/%/')
        ORDER BY path
    </select>
</mapper>